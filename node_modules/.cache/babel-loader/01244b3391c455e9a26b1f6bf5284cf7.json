{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\manis\\\\academics\\\\sem3\\\\web\\\\mini-project\\\\twilight-updated-light\\\\src\\\\Components\\\\Comment-box\\\\index.js\";\n// src/components/Comment/index.js\nimport React from \"react\";\nimport \"./Comment-box.css\";\nimport Comments from \"../Comments\";\n\nclass CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsx: [],\n      comment_text: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick(e) {\n    fetch(\"/comments/upload\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username: this.props.username,\n        useravatar: this.props.useravatar,\n        text: this.state.comment_text,\n        time: Date(Date.now()).toString(),\n        post_id: this.props.post_id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => console.log(\"Comment saved\"));\n    this.forceUpdate();\n  }\n\n  handleChange(e) {\n    this.setState({\n      comment_text: e.target.value\n    });\n  }\n\n  render() {\n    var comments = [];\n    var i = 0;\n    fetch(\"/comments\" + \"/\" + this.props.post_id, {\n      method: \"GET\"\n    }).then(comments => comments.json()).then(comments => {\n      var comment_jsx = [];\n\n      for (i = 0; i < comments.length; i++) {\n        comment_jsx.push( /*#__PURE__*/_jsxDEV(Comments, {\n          post_id: comments[i].post_id,\n          username: comments[i].username,\n          useravatar: comments[i].useravatar,\n          text: comments[i].text,\n          time: comments[i].time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this));\n      }\n\n      this.setState({\n        jsx: comment_jsx\n      });\n    });\n\n    if (this.state.jsx.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }, this), \"No comments yet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: this.handleChange,\n          value: this.state.comment_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClick,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 2\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }, this), this.state.jsx, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: this.handleChange,\n          value: this.state.comment_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClick,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}\n\nexport default CommentBox;","map":{"version":3,"sources":["C:/Users/manis/academics/sem3/web/mini-project/twilight-updated-light/src/Components/Comment-box/index.js"],"names":["React","Comments","CommentBox","Component","constructor","props","state","jsx","comment_text","handleClick","bind","handleChange","e","fetch","method","body","JSON","stringify","username","useravatar","text","time","Date","now","toString","post_id","headers","then","res","console","log","forceUpdate","setState","target","value","render","comments","i","json","comment_jsx","length","push"],"mappings":"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","sourcesContent":["// src/components/Comment/index.js\nimport React from \"react\";\nimport \"./Comment-box.css\";\nimport Comments from \"../Comments\"\n\nclass CommentBox extends React.Component {\n\n  constructor(props){\n  super(props);\n\tthis.state = {\n\tjsx:[],\n\tcomment_text : \"\"\n\t};\n\tthis.handleClick = this.handleClick.bind(this);\n\tthis.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick(e){\n  fetch(\"/comments/upload\",{\n  method:\"POST\",\n  body:JSON.stringify({username:this.props.username,useravatar:this.props.useravatar,text:this.state.comment_text,\ntime:Date(Date.now()).toString(),post_id:this.props.post_id}),\nheaders:{'Content-Type':'application/json'}\n\n}).then(res=>(console.log(\"Comment saved\")));\n\nthis.forceUpdate();\n\n}\n\n handleChange(e){\nthis.setState({comment_text:e.target.value});\n}\n\n  render() {\n  var comments = [];\n  var i = 0;\n  fetch(\"/comments\"+\"/\"+this.props.post_id,\n  {\n\tmethod:\"GET\",\n  }\n  )\n  .then(comments=>comments.json())\n  .then(\n         (comments) =>{\n\t var comment_jsx = []\n\t for(i=0;i<comments.length;i++){\n\tcomment_jsx.push(<Comments post_id = {comments[i].post_id} username = {comments[i].username} useravatar = {comments[i].useravatar} text = {comments[i].text} time = {comments[i].time} />)\n\t}\n\tthis.setState({jsx: comment_jsx})\n\t\n});\n\n   if(this.state.jsx.length === 0)\n   {\n\treturn(\n\t<div>\n\t<h3>Comments:</h3><br/>\n\t\tNo comments yet.\n\t<br/>\n\t<textarea onChange = {this.handleChange} value = {this.state.comment_text}></textarea>\n\t<br/>\n\t<button onClick = {this.handleClick}>Comment</button>\n      </div>\n\n\n);\n   }\nelse{\n return (\n      <div>\n\t<h3>Comments:</h3><br/>\n\t{this.state.jsx}\n\t<br/>\n\t<textarea onChange = {this.handleChange} value = {this.state.comment_text}></textarea>\n\t<br/>\n\t<button onClick = {this.handleClick}>Comment</button>\n      </div>\n    );\n}\n}\n}\nexport default CommentBox;\n"]},"metadata":{},"sourceType":"module"}