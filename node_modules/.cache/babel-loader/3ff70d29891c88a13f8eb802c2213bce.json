{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\manis\\\\academics\\\\sem3\\\\web\\\\mini-project\\\\twilight-updated-light\\\\src\\\\Components\\\\Register\\\\index.js\";\n//src/components/About/index.js\nimport React from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport \"./Register.css\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      username: \"\",\n      useravatar: \"\",\n      password: \"\",\n      redirect: false,\n      duplicate: false,\n      friends: []\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    let duplicate_user = false;\n    console.log(\"Entered login handle\");\n    const data = new FormData();\n    data.append(\"userimg\", this.state.files[0]);\n    data.append(\"username\", this.state.username);\n    data.append(\"password\", this.state.password);\n    data.append(\"friends\", this.state.friends);\n    fetch(\"/login/add\", {\n      method: \"POST\",\n      body: data\n    }).then(res => {\n      console.log(res.status);\n\n      if (res.status === 500) {\n        console.log(\"Internal server error\");\n      }\n    }).catch(err => console.log(err));\n    fetch(\"/login/\" + this.state.username, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(user => {\n      console.log(user);\n\n      if (user.length !== 0) {\n        if (user[0].username.equals(this.state.username)) {\n          duplicate_user = true;\n        }\n      }\n    });\n    console.log(\"The value of duplicate user is \");\n    console.log(duplicate_user);\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    if (this.state.duplicate) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Given username already exists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Register\",\n          children: \"Go back to Registration page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        push: true,\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.username,\n          placeholder: \"enter a username\",\n          onChange: e => this.setState({\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: this.state.password,\n            placeholder: \"enter a password\",\n            onChange: e => this.setState({\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"useravatar\",\n            children: \"Upload profile image : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"userimg\",\n            onChange: e => {\n              this.setState({\n                files: e.target.files\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/manis/academics/sem3/web/mini-project/twilight-updated-light/src/Components/Register/index.js"],"names":["React","Redirect","Link","Register","Component","constructor","props","state","files","username","useravatar","password","redirect","duplicate","friends","handleLogin","bind","e","preventDefault","duplicate_user","console","log","data","FormData","append","fetch","method","body","then","res","status","catch","err","headers","json","user","length","equals","setState","render","target","value"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,UAAU,EAAE,EAHD;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,QAAQ,EAAE,KALC;AAMXC,MAAAA,SAAS,EAAE,KANA;AAOXC,MAAAA,OAAO,EAAE;AAPE,KAAb;AAUA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,CAAD,EAAI;AACbA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,cAAc,GAAG,KAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuB,KAAKjB,KAAL,CAAWC,KAAX,CAAiB,CAAjB,CAAvB;AACAc,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB,KAAKjB,KAAL,CAAWE,QAAnC;AACAa,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB,KAAKjB,KAAL,CAAWI,QAAnC;AACAW,IAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuB,KAAKjB,KAAL,CAAWO,OAAlC;AACAW,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,IAAI,EAAEL;AAFY,KAAf,CAAL,CAIGM,IAJH,CAISC,GAAD,IAAS;AACbT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACC,MAAhB;;AACA,UAAID,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBV,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AACF,KATH,EAUGU,KAVH,CAUUC,GAAD,IAASZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAVlB;AAYAP,IAAAA,KAAK,CAAC,YAAY,KAAKlB,KAAL,CAAWE,QAAxB,EAAkC;AACrCiB,MAAAA,MAAM,EAAE,KAD6B;AAErCO,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAF4B,KAAlC,CAAL,CAIGL,IAJH,CAISC,GAAD,IAASA,GAAG,CAACK,IAAJ,EAJjB,EAKGN,IALH,CAKSO,IAAD,IAAU;AACdf,MAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;;AACA,UAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,YAAID,IAAI,CAAC,CAAD,CAAJ,CAAQ1B,QAAR,CAAiB4B,MAAjB,CAAwB,KAAK9B,KAAL,CAAWE,QAAnC,CAAJ,EAAkD;AAChDU,UAAAA,cAAc,GAAG,IAAjB;AACD;AACF;AACF,KAZH;AAcAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AAEA,SAAKmB,QAAL,CAAc;AAAE1B,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACD;;AAED2B,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKhC,KAAL,CAAWM,SAAf,EAA0B;AACxB,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD,MAQO,IAAI,KAAKN,KAAL,CAAWK,QAAf,EAAyB;AAC9B,0BAAO,QAAC,QAAD;AAAU,QAAA,IAAI,MAAd;AAAe,QAAA,EAAE,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAM,QAAA,QAAQ,EAAE,KAAKG,WAArB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,QAFpB;AAGE,UAAA,WAAW,EAAC,kBAHd;AAIE,UAAA,QAAQ,EAAGQ,CAAD,IAAO,KAAKqB,QAAL,CAAc;AAAE7B,YAAAA,QAAQ,EAAEQ,CAAC,CAACuB,MAAF,CAASC;AAArB,WAAd;AAJnB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWI,QAFpB;AAGE,YAAA,WAAW,EAAC,kBAHd;AAIE,YAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKqB,QAAL,CAAc;AAAE3B,cAAAA,QAAQ,EAAEM,CAAC,CAACuB,MAAF,CAASC;AAArB,aAAd;AAJnB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAiBE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,QAAQ,EAAGxB,CAAD,IAAO;AACf,mBAAKqB,QAAL,CAAc;AAAE9B,gBAAAA,KAAK,EAAES,CAAC,CAACuB,MAAF,CAAShC;AAAlB,eAAd;AACD;AALH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eA2BE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD;AACF;;AArGoC;;AAwGvC,eAAeL,QAAf","sourcesContent":["//src/components/About/index.js\n\nimport React from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport \"./Register.css\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      username: \"\",\n      useravatar: \"\",\n      password: \"\",\n      redirect: false,\n      duplicate: false,\n      friends: [],\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    let duplicate_user = false;\n    console.log(\"Entered login handle\");\n    const data = new FormData();\n    data.append(\"userimg\", this.state.files[0]);\n    data.append(\"username\", this.state.username);\n    data.append(\"password\", this.state.password);\n    data.append(\"friends\", this.state.friends);\n    fetch(\"/login/add\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => {\n        console.log(res.status);\n        if (res.status === 500) {\n          console.log(\"Internal server error\");\n        }\n      })\n      .catch((err) => console.log(err));\n\n    fetch(\"/login/\" + this.state.username, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        console.log(user);\n        if (user.length !== 0) {\n          if (user[0].username.equals(this.state.username)) {\n            duplicate_user = true;\n          }\n        }\n      });\n\n    console.log(\"The value of duplicate user is \");\n    console.log(duplicate_user);\n\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    if (this.state.duplicate) {\n      return (\n        <div>\n          <h3>Given username already exists</h3>\n          <br />\n          <Link to=\"/Register\">Go back to Registration page</Link>\n        </div>\n      );\n    } else if (this.state.redirect) {\n      return <Redirect push to=\"/\" />;\n    } else {\n      return (\n        <form onSubmit={this.handleLogin}>\n          <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            value={this.state.username}\n            placeholder=\"enter a username\"\n            onChange={(e) => this.setState({ username: e.target.value })}\n          />\n          <div>\n            <label htmlFor=\"password\">password: </label>\n            <input\n              type=\"password\"\n              value={this.state.password}\n              placeholder=\"enter a password\"\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"useravatar\">Upload profile image : </label>\n            <input\n              type=\"file\"\n              name=\"userimg\"\n              onChange={(e) => {\n                this.setState({ files: e.target.files });\n              }}\n            />\n          </div>\n          <button type=\"submit\">Register</button>\n        </form>\n      );\n    }\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}